{"version":3,"sources":["store/reducers/general/type.js","store/reducers/general/reducer.js","store/reducers/index.js","store/index.js","components/notfound/notfound.js","layouts/About.js","services/countryProfileServices.js","components/country/countryProfileTable.js","hooks/useTrans.js","components/country/countryProfile.js","layouts/Country.js","store/reducers/general/action.js","components/language-switcher/languageSwitcherSelector.js","components/header/header.js","layouts/Home.js","components/charts/map.js","App.js","serviceWorker.js","index.js"],"names":["SET_CURRENT_COUNTRY","SET_CURRENT_LOCALE","SET_TRANSLATIONS","initialState","currentCountry","currentLocale","translations","en","es","GeneralReducer","state","type","payload","types","appReducers","combineReducers","general","composedEnhancers","compose","applyMiddleware","createStore","reducers","Notfound","About","className","CountryProfileServices","country","countryProfiledata","id","axios","get","data","translationData","CountryProfileTable","useState","tenderData","setTenderData","loading","setLoading","useParams","useEffect","CountryProfileTenderData","then","response","style","width","map","tender","index","project_title","procurement_method","supplier_name","status","value_usd","toLocaleString","red_flag","useTrans","useSelector","trans","key","replace","locale","translated","isEmpty","Object","entries","forEach","value","CountryProfile","profileData","SI_SYMBOL","formatNumber","number","tier","Math","log10","suffix","pow","toFixed","allowMultipleExpanded","allowZeroExpanded","equity_unemployment_rate","equity_income_avg","equity_gender_dist_male","equity_gender_dist_female","equity_age_dist_0_14","equity_age_dist_15_24","equity_age_dist_25_54","equity_age_dist_55_64","equity_age_dist_65_above","procurement_annual_public_spending","procurement_gdp_pc","procurement_covid_spending","procurement_total_market_pc","href","covid19_procurement_policy","covid19_preparedness","CountryDetail","setData","CountryProfileData","name","url","height","display","position","population","gdp","currency","healthcare_budget","healthcare_gdp_pc","source","title","covid_cases_total","covid_deaths_total","setCurrentLocale","createAction","window","localStorage","setItem","setTranslations","languages","code","LanguageSwitcherSelector","dispatch","useDispatch","onChange","e","target","getTranslations","language","selected","Header","to","exact","activeClassName","Home","Map","svgRef","useRef","console","log","ref","App","getItem","path","component","Country","Boolean","location","hostname","match","ReactDOM","render","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"i6IAAaA,EAAsB,2BACtBC,EAAqB,2BACrBC,EAAmB,yBCA1BC,EAAe,CACjBC,eAAgB,KAChBC,cAAe,KACfC,aAAc,CAAEC,GAAI,GAAIC,GAAI,KAmBjBC,EAhBQ,WAA8C,IAA7CC,EAA4C,uDAApCP,EAAoC,yCAApBQ,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClD,OAAQD,GACJ,KAAKE,EACD,OAAO,2BAAKH,GAAZ,IAAmBN,eAAgBQ,IAEvC,KAAKC,EACD,OAAO,2BAAKH,GAAZ,IAAmBL,cAAeO,IAEtC,KAAKC,EACD,OAAO,2BAAKH,GAAZ,IAAmBJ,aAAcM,IAErC,QACI,OAAOF,ICbJI,EAJKC,YAAgB,CAChCC,QAASP,ICIPQ,EAAoBC,IAAO,WAAP,GAAQC,IAAe,WAAf,EAHf,KAGO,OAFR,KAIHC,cAAYC,EANN,GAM8BJ,G,eCRpCK,EADE,kBAAM,4CCaRC,MAZf,WACI,OACI,yBAASC,UAAU,OAAnB,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,sCAAf,qC,kGCyBDC,E,0JA3BsBC,G,0FACtBC,EAAmBD,IAAY,M,oLAGVE,G,yFACLC,IAAMC,IACzB,8DAAgEF,G,uBAD5DG,E,EAAAA,K,kBAGDA,G,0LAG2BH,G,yFACXC,IAAMC,IACzB,sEACIF,G,uBAFAG,E,EAAAA,K,kBAIDA,G,iLAGkB1B,G,yFACewB,IAAMC,IAAN,0EAC+BzB,EAD/B,gB,uBAA1B2B,E,EAAND,K,iCAGE1B,EAAgB2B,I,yGC0CnBC,EAhEa,WAAO,IAAD,EACMC,mBAAS,IADf,mBACvBC,EADuB,KACXC,EADW,OAEAF,oBAAS,GAFT,mBAEvBG,EAFuB,KAEdC,EAFc,KAIxBV,EAAOW,cAAPX,GAWN,OATAY,qBAAU,WACNf,EAAuBgB,yBAAyBb,GAAIc,MAAK,SAACC,GAClDA,GACAP,EAAcO,GAElBL,GAAW,QAEhB,CAACV,IAGA,8BACKS,EACG,kCACI,gCACI,+BACI,oBAAIO,MAAO,CAAEC,MAAO,OAApB,2BACA,oDACA,0CACA,wCACA,6CACA,4BAGR,gCACKV,GACGA,EAAWW,KAAI,SAACC,EAAQC,GACpB,OACI,+BACI,6BAAKD,EAAOE,gBACZ,6BAAKF,EAAOG,qBACZ,oBAAI1B,UAAU,YAAd,SACKuB,EAAOI,gBAEZ,6BAAKJ,EAAOK,SACZ,6BACKL,EAAOM,UAAUC,eACd,QAGR,6BACKP,EAAOQ,UACJ,sBAAM/B,UAAU,qEAAhB,SACKuB,EAAOQ,eAffP,WAyB7B,M,uBCrCDQ,EAvBE,WACb,IAAMlD,EAAemD,aAAY,SAAC/C,GAAD,OAAWA,EAAMM,QAAQV,gBACpDD,EAAgBoD,aAAY,SAAC/C,GAAD,OAAWA,EAAMM,QAAQX,iBAE3D,MAAO,CACHqD,MAAO,SAACC,GAAmC,IAAD,yDAAP,GAApBC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAChBC,EAAahC,cACbxB,EAAauD,GAAUxD,GACvBsD,EACAA,GASJ,OANIC,IAAYG,kBAAQH,IACpBI,OAAOC,QAAQL,GAASM,SAAQ,YAAmB,IAAD,mBAAhBP,EAAgB,KAAXQ,EAAW,KAC9CL,EAAaA,EAAWF,QAAQD,EAAKQ,MAItCL,KCoLJM,EA7LQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACdX,EAAUF,IAAVE,MAEFY,EAAY,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CC,EAAe,SAACC,GAElB,IAAIC,EAAQC,KAAKC,MAAMH,GAAU,EAAK,EAGtC,GAAa,IAATC,EAAY,OAAOD,EAGvB,IAAII,EAASN,EAAUG,GAOvB,OAHaD,EAHDE,KAAKG,IAAI,GAAW,EAAPJ,IAMXK,QAAQ,GAAKF,GAG/B,OACI,eAAC,IAAD,CAAWG,uBAAqB,EAACC,mBAAiB,EAAlD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKtB,EAAM,oBAGf,cAAC,IAAD,UACI,sBAAKlC,UAAU,0BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,6BAAKkC,EAAM,uBACX,oBAAGlC,UAAU,wCAAb,UACK6C,EAAYY,yBADjB,UAIJ,sBAAKzD,UAAU,qBAAf,UACI,6BAAKkC,EAAM,oBACX,oBAAGlC,UAAU,wCAAb,cACM6C,EAAYa,wBAGtB,sBAAK1D,UAAU,qBAAf,UACI,6BAAKkC,EAAM,yBACX,sBAAKlC,UAAU,OAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,oBAAGA,UAAU,wCAAb,UACK6C,EAAYc,wBADjB,OAGA,mBAAG3D,UAAU,oBAAb,SACKkC,EAAM,aAGf,sBAAKlC,UAAU,oBAAf,UACI,oBAAGA,UAAU,wCAAb,UACK6C,EAAYe,0BADjB,OAGA,mBAAG5D,UAAU,oBAAb,SACKkC,EAAM,qBAKvB,sBAAKlC,UAAU,qBAAf,UACI,6BAAKkC,EAAM,sBACX,sBAAKlC,UAAU,iBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,oBAAGA,UAAU,wCAAb,UACK6C,EAAYgB,qBADjB,OAGA,oBAAG7D,UAAU,oBAAb,kBACUkC,EAAM,aAGpB,sBAAKlC,UAAU,oBAAf,UACI,oBAAGA,UAAU,wCAAb,UACK6C,EAAYiB,sBADjB,OAGA,oBAAG9D,UAAU,oBAAb,mBACWkC,EAAM,aAGrB,sBAAKlC,UAAU,oBAAf,UACI,oBAAGA,UAAU,wCAAb,UACK6C,EAAYkB,sBADjB,OAGA,oBAAG/D,UAAU,oBAAb,mBACWkC,EAAM,aAGrB,sBAAKlC,UAAU,oBAAf,UACI,oBAAGA,UAAU,wCAAb,UACK6C,EAAYmB,sBADjB,OAGA,oBAAGhE,UAAU,oBAAb,mBACWkC,EAAM,aAGrB,gCACI,oBAAGlC,UAAU,wCAAb,UACK6C,EAAYoB,yBADjB,OAGA,mBAAGjE,UAAU,oBAAb,yCASxB,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKkC,EAAM,mBAGf,eAAC,IAAD,WACI,sBAAKlC,UAAU,2BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,6BACKkC,EAAM,wCAEX,oBAAGlC,UAAU,wCAAb,cAEK+C,EACGF,EAAYqB,0CAIxB,sBAAKlE,UAAU,qBAAf,UACI,6BAAKkC,EAAM,6BACX,oBAAGlC,UAAU,wCAAb,UACK6C,EAAYsB,mBADjB,UAIJ,sBAAKnE,UAAU,qBAAf,UACI,6BAAKkC,EAAM,uBACX,oBAAGlC,UAAU,wCAAb,cAEK+C,EACGF,EAAYuB,kCAIxB,sBAAKpE,UAAU,qBAAf,UACI,6BAAKkC,EAAM,qCACX,oBAAGlC,UAAU,wCAAb,UACK6C,EAAYwB,4BADjB,aAKR,qBAAKrE,UAAU,OAAf,SACI,mBAAGsE,KAAK,GAAGtE,UAAU,gBAArB,SACKkC,EAAM,6CAKvB,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKA,EAAM,mCAGf,cAAC,IAAD,UACI,qBAAKlC,UAAU,OAAf,SACI,4BAAI6C,EAAY0B,oCAI5B,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKrC,EAAM,6BAGf,cAAC,IAAD,UACI,qBAAKlC,UAAU,OAAf,SACI,4BAAI6C,EAAY2B,kCCyBzBC,MAjNf,WAA0B,IAAD,EACG/D,mBAAS,IADZ,mBACdH,EADc,KACRmE,EADQ,OAEShE,oBAAS,GAFlB,mBAEdG,EAFc,KAELC,EAFK,KAIfV,EAAOW,cAAPX,GAEA0C,EAAY,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1CC,EAAe,SAACC,GAElB,IAAIC,EAAQC,KAAKC,MAAMH,GAAU,EAAK,EAGtC,GAAa,IAATC,EAAY,OAAOD,EAGvB,IAAII,EAASN,EAAUG,GAOvB,OAHaD,EAHDE,KAAKG,IAAI,GAAW,EAAPJ,IAMXK,QAAQ,GAAKF,GAG/BpC,qBAAU,WACNf,EAAuB0E,mBAAmBvE,GAAIc,MAAK,SAACC,GAC5CA,GACAuD,EAAQvD,GAEZL,GAAW,QAEhB,CAACV,IAjCiB,IAmCb8B,EAAUF,IAAVE,MAER,OACI,yBAASlC,UAAU,YAAnB,SACKa,EACG,sBAAKb,UAAU,oBAAf,UACI,oBAAIA,UAAU,wCAAd,SACKO,EAAKqE,OAEV,sBAAK5E,UAAU,6BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,qBAAKA,UAAU,GAAf,SACI,cAAC,IAAD,CACI6E,IAAI,wQACJxD,MAAM,OACNyD,OAAO,QACP1E,GAAG,GACHJ,UAAU,GACV+E,QAAQ,UACRC,SAAS,iBAIrB,qBAAKhF,UAAU,sCAAf,SACI,sBAAKA,UAAU,6CAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,gCACI,uBAAMA,UAAU,uBAAhB,UACKkC,EAAM,cAAe,OAE1B,oBAAIlC,UAAU,WAAd,SACK+C,EACGxC,EAAK0E,mBAKrB,qBAAKjF,UAAU,4BAAf,SACI,gCACI,sBAAMA,UAAU,uBAAhB,SACKkC,EAAM,SAEX,qBAAIlC,UAAU,WAAd,UACK+C,EAAaxC,EAAK2E,KACnB,sBAAMlF,UAAU,gDAAhB,SACKO,EAAK4E,mBAKtB,qBAAKnF,UAAU,4BAAf,SACI,gCACI,sBAAMA,UAAU,uCAAhB,SACKkC,EAAM,uBAEX,qBAAIlC,UAAU,WAAd,cACMO,EAAK6E,kBACP,sBAAMpF,UAAU,gDAAhB,SACKO,EAAK4E,cAGd,sBAAMnF,UAAU,+BAAhB,SACKkC,EAAM,qBAInB,qBAAKlC,UAAU,4BAAf,SACI,gCACI,sBAAMA,UAAU,uCAAhB,SACKkC,EACG,4BAGR,qBAAIlC,UAAU,WAAd,UACKO,EAAK8E,kBACN,sBAAMrF,UAAU,gDAAhB,uBAMZ,qBAAKA,UAAU,mBAAf,SACI,8BACI,oBAAGA,UAAU,sBAAb,UACKkC,EAAM,UADX,IAEI,mBACIoC,KAAM/D,EAAK+E,OACXtF,UAAU,qBACVuF,MAAM,0BAHV,SAIKrD,EACG,yCAQ5B,qBAAKlC,UAAU,6CAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,gCACI,sBAAMA,UAAU,uBAAhB,SACKkC,EACG,0BAGR,oBAAIlC,UAAU,WAAd,SACKO,EAAKiF,mBACFjF,EAAKiF,kBAAkB1D,eACnB,aAKpB,qBAAK9B,UAAU,4BAAf,SACI,gCACI,sBAAMA,UAAU,uBAAhB,SACKkC,EACG,8BAGR,oBAAIlC,UAAU,WAAd,SACKO,EAAKkF,oBACFlF,EAAKkF,mBAAmB3D,eACpB,aAKpB,qBAAK9B,UAAU,mBAAf,SACI,8BACI,oBAAGA,UAAU,sBAAb,UACKkC,EAAM,UADX,IAEI,mBACIoC,KAAM/D,EAAK+E,OACXtF,UAAU,qBACVuF,MAAM,0BAHV,SAIKrD,EACG,iDAWxC,8BACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAMA,EAAM,aACZ,cAAC,IAAD,UAAMA,EAAM,gBAEhB,cAAC,IAAD,UACI,cAAC,EAAD,MAEJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAgBW,YAAatC,cAM7C,M,QC/MHmF,GAFoBC,YAAatG,GAEd,SAACgD,GAG7B,OAFAuD,OAAOC,aAAaC,QAAQ,SAAUzD,GAE/B,CACHlD,KAAME,EACND,QAASiD,KAIJ0D,EAAkBJ,YAAatG,GCLtC2G,EAAY,CACd,CAAEC,KAAM,KAAMrB,KAAM,WACpB,CAAEqB,KAAM,KAAMrB,KAAM,YAsCTsB,EAnCkB,WAC7B,IAAMrH,EAAgBoD,aAAY,SAAC/C,GAAD,OAAWA,EAAMM,QAAQX,iBAErDsH,EAAWC,cAWTlE,EAAUF,IAAVE,MAER,OACI,sBAAKlC,UAAU,OAAf,UACI,uBAAMA,UAAU,eAAhB,UAAgCkC,EAAM,mBAAtC,OACA,wBACIlC,UAAU,yFACVqG,SAhBK,SAACC,GACdH,EAAST,EAAiBY,EAAEC,OAAO5D,QACnC1C,EAAuBuG,gBAAgBF,EAAEC,OAAO5D,OAAOzB,MACnD,SAACC,GACGgF,EAASJ,EAAgB5E,QAU7B,SAGK6E,EAAU1E,KAAI,SAACmF,EAAUjF,GAAX,OACX,wBAEImB,MAAO8D,EAASR,KAChBS,SAAU7H,IAAkB4H,EAASR,KAHzC,SAIKQ,EAAS7B,MAHLpD,YCMdmF,EAxCA,WAAO,IACVzE,EAAUF,IAAVE,MACR,OACI,qBAAKlC,UAAU,mCAAf,SACI,sBAAKA,UAAU,8DAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,IAAD,CAAS4G,GAAG,IAAI5G,UAAU,eAA1B,6CAIJ,sBAAKA,UAAU,oBAAf,UACI,qBAAIA,UAAU,OAAd,UACI,oBAAIA,UAAU,OAAd,SACI,cAAC,IAAD,CAAS6G,OAAK,EAACC,gBAAgB,SAASF,GAAG,IAA3C,SACK1E,EAAM,YAGf,oBAAIlC,UAAU,OAAd,SACI,cAAC,IAAD,CAAS8G,gBAAgB,SAASF,GAAG,SAArC,SACK1E,EAAM,aAGf,oBAAIlC,UAAU,OAAd,SACI,cAAC,IAAD,CAAS8G,gBAAgB,SAASF,GAAG,aAArC,SACK1E,EAAM,cAGf,oBAAIlC,UAAU,OAAd,SACI,cAAC,IAAD,CAAS8G,gBAAgB,SAASF,GAAG,aAArC,SACK1E,EAAM,gBAInB,cAAC,EAAD,aC4DL6E,EA9FF,WAAO,IACR7E,EAAUF,IAAVE,MAER,OACI,eAAC,WAAD,WACI,uBACIlC,UAAU,oEACVoB,MAAO,CAAE0D,OAAQ,SAFrB,UAGI,oBAAI9E,UAAU,mEAAd,SACKkC,EAAM,2BAGX,mBAAGlC,UAAU,6BAAb,SACKkC,EAAM,8CAGX,sBAAKlC,UAAU,2CAAf,UACI,oBAAGsE,KAAK,GAAGtE,UAAU,uBAArB,UACI,qBAAKA,UAAU,wBAAf,SAAwC,MACxC,gCACI,mBAAGA,UAAU,mCAAb,SACKkC,EAAM,kBAEX,mBAAGlC,UAAU,gBAAb,SACKkC,EAAM,gCAInB,oBAAGoC,KAAK,GAAGtE,UAAU,OAArB,UACI,qBAAKA,UAAU,wBAAf,SAAwC,MACxC,gCACI,mBAAGA,UAAU,mCAAb,SACKkC,EAAM,qBAEX,mBAAGlC,UAAU,gBAAb,SACKkC,EAAM,8CAM3B,kCACI,sBAAKlC,UAAU,8EAAf,UACI,sBAAKA,UAAU,0EAAf,UACI,4BACKkC,EACG,+DAGR,oBACIoC,KAAK,GACLtE,UAAU,0CAFd,UAGI,4BAAIkC,EAAM,aACV,oBAAGlC,UAAU,WAAb,UACKkC,EAAM,WADX,IACwB,aAIhC,sBAAKlC,UAAU,iFAAf,UACI,4BACKkC,EACG,2DAGR,oBACIoC,KAAK,GACLtE,UAAU,0CAFd,UAGI,4BAAIkC,EAAM,aACV,oBAAGlC,UAAU,WAAb,UACKkC,EAAM,QADX,IACqB,aAI7B,sBAAKlC,UAAU,yEAAf,UACI,4BACKkC,EACG,sDAGR,oBACIoC,KAAK,GACLtE,UAAU,0CAFd,UAGI,4BAAIkC,EAAM,aACV,oBAAGlC,UAAU,WAAb,UACKkC,EAAM,aADX,IAC0B,sBCvEvC8E,EAdH,WACR,IAAMC,EAASC,mBAMlB,OALGC,QAAQC,IAAIH,GAEZjG,qBAAU,WACNmG,QAAQC,IAAIH,KACb,IAEL,8BACC,qBAAKI,IAAKJ,OCiCEK,MA7Bf,WACI,IAAMnB,EAAWC,cACXvH,EAAgBoD,aAAY,SAAC/C,GAAD,OAAWA,EAAMM,QAAQX,iBAa3D,OAXAmC,qBAAU,WACNmF,EACIT,EAAiBE,OAAOC,aAAa0B,QAAQ,WAAa,OAE9DtH,EAAuBuG,gBAAgB3H,GAAeqC,MAClD,SAACC,GACGgF,EAASJ,EAAgB5E,SAGlC,CAACgF,EAAUtH,IAGV,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgI,OAAK,EAACW,KAAK,IAAIC,UAAWV,IACjC,cAAC,IAAD,CAAOS,KAAK,SAASC,UAAW1H,IAChC,cAAC,IAAD,CAAOyH,KAAK,OAAOC,UAAWT,IAC9B,cAAC,IAAD,CAAOQ,KAAK,eAAeC,UAAWC,IACtC,cAAC,IAAD,CAAOD,UAAW3H,WC1Bd6H,QACa,cAA7B/B,OAAOgC,SAASC,UAEiB,UAA7BjC,OAAOgC,SAASC,UAEhBjC,OAAOgC,SAASC,SAASC,MACrB,2DCTZC,IAASC,OACR,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACC,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SDqHjB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBrH,MAAK,SAACsH,GACHA,EAAaC,gBAEhBC,OAAM,SAACC,GACJxB,QAAQwB,MAAMA,EAAMC,c","file":"static/js/main.b33cbe2d.chunk.js","sourcesContent":["export const SET_CURRENT_COUNTRY = 'general/setCurrentCounry'\nexport const SET_CURRENT_LOCALE = 'general/setCurrentLocale'\nexport const SET_TRANSLATIONS = 'general/setTranslation'\n","import * as types from './type'\n\nconst initialState = {\n    currentCountry: null,\n    currentLocale: 'en',\n    translations: { en: {}, es: {} }\n}\n\nconst GeneralReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.SET_CURRENT_COUNTRY:\n            return { ...state, currentCountry: payload }\n\n        case types.SET_CURRENT_LOCALE:\n            return { ...state, currentLocale: payload }\n\n        case types.SET_TRANSLATIONS:\n            return { ...state, translations: payload }\n\n        default:\n            return state\n    }\n}\n\nexport default GeneralReducer\n","import { combineReducers } from 'redux'\nimport { GeneralReducer } from './general'\n\nconst appReducers = combineReducers({\n    general: GeneralReducer\n})\n\nexport default appReducers\n","import { applyMiddleware, compose, createStore } from 'redux'\n\nimport reducers from './reducers'\n\nconst initialStore = {}\nconst middleware = []\nconst enhancers = []\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers)\n\nexport default createStore(reducers, initialStore, composedEnhancers)\n","import React from 'react'\nconst Notfound = () => <h2>Not found</h2>\nexport default Notfound\n","import React from 'react'\n\nfunction About() {\n    return (\n        <section className=\"px-4\">\n            <div className=\"container mx-auto\">\n                <div className=\"mt-4 bg-gray-100 p-4 shadow rounded\">\n                    This is about page\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default About\n","import countryProfiledata from '../data/country_profile.json'\nimport axios from 'axios'\n\nclass CountryProfileServices {\n    static async getProfileByCountry(country) {\n        return countryProfiledata[country] || null\n    }\n\n    static async CountryProfileData(id) {\n        const { data } = await axios.get(\n            'https://covid19admin.py.staging.yipl.com.np/api/v1/country/' + id\n        )\n        return data\n    }\n\n    static async CountryProfileTenderData(id) {\n        const { data } = await axios.get(\n            'https://covid19admin.py.staging.yipl.com.np/api/v1/tender/?country=' +\n                id\n        )\n        return data\n    }\n\n    static async getTranslations(currentLocale) {\n        const { data: translationData } = await axios.get(\n            `https://covid19admin.py.staging.yipl.com.np/static/translations/${currentLocale}/words.json`\n        )\n        return { [currentLocale]: translationData }\n    }\n}\n\nexport default CountryProfileServices\n","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport CountryProfileServices from '../../services/countryProfileServices'\nimport { useParams } from 'react-router-dom'\n\nconst CountryProfileTable = () => {\n    const [tenderData, setTenderData] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    let { id } = useParams()\n\n    useEffect(() => {\n        CountryProfileServices.CountryProfileTenderData(id).then((response) => {\n            if (response) {\n                setTenderData(response)\n            }\n            setLoading(true)\n        })\n    }, [id])\n\n    return (\n        <div>\n            {loading ? (\n                <table>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '35%' }}>Project Title</th>\n                            <th>Procurement Method</th>\n                            <th>Supplier</th>\n                            <th>Status</th>\n                            <th>Value (USD)</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tenderData &&\n                            tenderData.map((tender, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{tender.project_title}</td>\n                                        <td>{tender.procurement_method}</td>\n                                        <td className=\"uppercase\">\n                                            {tender.supplier_name}\n                                        </td>\n                                        <td>{tender.status}</td>\n                                        <td>\n                                            {tender.value_usd.toLocaleString(\n                                                'en'\n                                            )}\n                                        </td>\n                                        <td>\n                                            {tender.red_flag && (\n                                                <span className=\"bg-gray-300 inline-block px-4 rounded-full text-orange-500 text-xs\">\n                                                    {tender.red_flag}\n                                                </span>\n                                            )}\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n                    </tbody>\n                </table>\n            ) : (\n                ''\n            )}\n        </div>\n    )\n}\n\nexport default CountryProfileTable\n","import { get, isEmpty } from 'lodash'\nimport { useSelector } from 'react-redux'\n\nconst useTrans = () => {\n    const translations = useSelector((state) => state.general.translations)\n    const currentLocale = useSelector((state) => state.general.currentLocale)\n\n    return {\n        trans: (key, { replace, locale } = {}) => {\n            let translated = get(\n                translations[locale || currentLocale],\n                key,\n                key\n            )\n\n            if (replace && !isEmpty(replace)) {\n                Object.entries(replace).forEach(([key, value]) => {\n                    translated = translated.replace(key, value)\n                })\n            }\n\n            return translated\n        }\n    }\n}\n\nexport default useTrans\n","import React from 'react'\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel\n} from 'react-accessible-accordion'\n\nimport 'react-accessible-accordion/dist/fancy-example.css'\nimport useTrans from '../../hooks/useTrans'\n\nconst CountryProfile = ({ profileData }) => {\n    const { trans } = useTrans()\n\n    const SI_SYMBOL = ['', 'k', 'M', 'B', 'T', 'P', 'E']\n    const formatNumber = (number) => {\n        // what tier? (determines SI symbol)\n        var tier = (Math.log10(number) / 3) | 0\n\n        // if zero, we don't need a suffix\n        if (tier === 0) return number\n\n        // get suffix and determine scale\n        var suffix = SI_SYMBOL[tier]\n        var scale = Math.pow(10, tier * 3)\n\n        // scale the number\n        var scaled = number / scale\n\n        // format number and add suffix\n        return scaled.toFixed(1) + suffix\n    }\n\n    return (\n        <Accordion allowMultipleExpanded allowZeroExpanded>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        {trans('Equity Level')}\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div className=\"[ flex flex-wrap ] px-4\">\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('Unemployment rate')}</h4>\n                            <p className=\"text-3xl font-extrabold text-gray-900\">\n                                {profileData.equity_unemployment_rate}%\n                            </p>\n                        </div>\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('Average income')}</h4>\n                            <p className=\"text-3xl font-extrabold text-gray-900\">\n                                ${profileData.equity_income_avg}\n                            </p>\n                        </div>\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('Gender distribution')}</h4>\n                            <div className=\"flex\">\n                                <div className=\"mr-8 mb-4 md:mb-0\">\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_gender_dist_male}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        {trans('male')}\n                                    </p>\n                                </div>\n                                <div className=\"mr-8 mb-4 md:mb-0\">\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_gender_dist_female}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        {trans('female')}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('Age distribution')}</h4>\n                            <div className=\"flex flex-wrap\">\n                                <div className=\"mr-8 mb-4 md:mb-0\">\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_age_dist_0_14}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        0-14 {trans('yrs')}\n                                    </p>\n                                </div>\n                                <div className=\"mr-8 mb-4 md:mb-0\">\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_age_dist_15_24}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        15-24 {trans('yrs')}\n                                    </p>\n                                </div>\n                                <div className=\"mr-8 mb-4 md:mb-0\">\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_age_dist_25_54}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        25-54 {trans('yrs')}\n                                    </p>\n                                </div>\n                                <div className=\"mr-8 mb-4 md:mb-0\">\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_age_dist_55_64}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        55-64 {trans('yrs')}\n                                    </p>\n                                </div>\n                                <div>\n                                    <p className=\"text-3xl font-extrabold text-gray-900\">\n                                        {profileData.equity_age_dist_65_above}%\n                                    </p>\n                                    <p className=\"uppercase text-sm\">\n                                        65 & above\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        {trans('Procurement')}\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div className=\"[ flex flex-wrap px-4 ] \">\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>\n                                {trans('Annual public procurement spending')}\n                            </h4>\n                            <p className=\"text-3xl font-extrabold text-gray-900\">\n                                $\n                                {formatNumber(\n                                    profileData.procurement_annual_public_spending\n                                )}\n                            </p>\n                        </div>\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('% of Procurement to GDP')}</h4>\n                            <p className=\"text-3xl font-extrabold text-gray-900\">\n                                {profileData.procurement_gdp_pc}%\n                            </p>\n                        </div>\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('COVID-19 spending')}</h4>\n                            <p className=\"text-3xl font-extrabold text-gray-900\">\n                                $\n                                {formatNumber(\n                                    profileData.procurement_covid_spending\n                                )}\n                            </p>\n                        </div>\n                        <div className=\"mr-4 md:mr-12 mb-6\">\n                            <h4>{trans('% from total procurement market')}</h4>\n                            <p className=\"text-3xl font-extrabold text-gray-900\">\n                                {profileData.procurement_total_market_pc}%\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"px-4\">\n                        <a href=\"\" className=\"text-blue-600\">\n                            {trans(\"See Mexico's procurement portal\")}\n                        </a>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        {trans('COVID-19 Procurement Policy')}\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div className=\"px-4\">\n                        <p>{profileData.covid19_procurement_policy}</p>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        {trans('COVID-19 Preparedness')}\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div className=\"px-4\">\n                        <p>{profileData.covid19_preparedness}</p>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n        </Accordion>\n    )\n}\n\nexport default CountryProfile\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Iframe from 'react-iframe'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport CountryProfileTable from '../components/country/countryProfileTable'\nimport CountryProfile from '../components/country/countryProfile'\nimport CountryProfileServices from '../services/countryProfileServices'\nimport useTrans from '../hooks/useTrans'\n\nfunction CountryDetail() {\n    const [data, setData] = useState({})\n    const [loading, setLoading] = useState(false)\n\n    let { id } = useParams()\n\n    const SI_SYMBOL = ['', 'k', 'M', 'B', 'T', 'P', 'E']\n\n    const formatNumber = (number) => {\n        // what tier? (determines SI symbol)\n        var tier = (Math.log10(number) / 3) | 0\n\n        // if zero, we don't need a suffix\n        if (tier === 0) return number\n\n        // get suffix and determine scale\n        var suffix = SI_SYMBOL[tier]\n        var scale = Math.pow(10, tier * 3)\n\n        // scale the number\n        var scaled = number / scale\n\n        // format number and add suffix\n        return scaled.toFixed(1) + suffix\n    }\n\n    useEffect(() => {\n        CountryProfileServices.CountryProfileData(id).then((response) => {\n            if (response) {\n                setData(response)\n            }\n            setLoading(true)\n        })\n    }, [id])\n\n    const { trans } = useTrans()\n\n    return (\n        <section className=\"px-4 py-8\">\n            {loading ? (\n                <div className=\"container mx-auto\">\n                    <h2 className=\"font-bold mb-5 text-3xl text-gray-900\">\n                        {data.name}\n                    </h2>\n                    <div className=\"flex flex-wrap -mx-4 -mb-4\">\n                        <div className=\"w-full md:w-1/2 lg:w-7/12 px-4 mb-4\">\n                            <div className=\"\">\n                                <Iframe\n                                    url=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d15010268.98948006!2d-111.65143694146222!3d23.293382281181213!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x84043a3b88685353%3A0xed64b4be6b099811!2sMexico!5e0!3m2!1sen!2snp!4v1602666699465!5m2!1sen!2snp\"\n                                    width=\"100%\"\n                                    height=\"450px\"\n                                    id=\"\"\n                                    className=\"\"\n                                    display=\"initial\"\n                                    position=\"relative\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-5/12 px-4 mb-4\">\n                            <div className=\"flex flex-col text-gray-800 font-extrabold\">\n                                <div className=\"p-8 py-4 border border-gray-800\">\n                                    <div className=\"flex flex-wrap -mx-4 -mb-4\">\n                                        <div className=\"w-full xs:w-1/2 px-4 mb-4\">\n                                            <div>\n                                                <span className=\"text-lg inline-block\">\n                                                    {trans('Population')}{' '}\n                                                </span>\n                                                <h2 className=\"text-3xl\">\n                                                    {formatNumber(\n                                                        data.population\n                                                    )}\n                                                </h2>\n                                            </div>\n                                        </div>\n                                        <div className=\"w-full xs:w-1/2 px-4 mb-4\">\n                                            <div>\n                                                <span className=\"text-lg inline-block\">\n                                                    {trans('GDP')}\n                                                </span>\n                                                <h2 className=\"text-3xl\">\n                                                    {formatNumber(data.gdp)}\n                                                    <span className=\"inline-block uppercase text-xl tracking-tight\">\n                                                        {data.currency}\n                                                    </span>\n                                                </h2>\n                                            </div>\n                                        </div>\n                                        <div className=\"w-full xs:w-1/2 px-4 mb-4\">\n                                            <div>\n                                                <span className=\"text-lg font-extrabold  inline-block\">\n                                                    {trans('Healthcare budget')}\n                                                </span>\n                                                <h2 className=\"text-3xl\">\n                                                    ${data.healthcare_budget}\n                                                    <span className=\"inline-block uppercase text-sm tracking-tight\">\n                                                        {data.currency}\n                                                    </span>\n                                                </h2>\n                                                <span className=\"block text-lg font-extrabold\">\n                                                    {trans('per capita')}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"w-full xs:w-1/2 px-4 mb-4\">\n                                            <div>\n                                                <span className=\"text-lg font-extrabold  inline-block\">\n                                                    {trans(\n                                                        '% of GDP to healthcare'\n                                                    )}\n                                                </span>\n                                                <h2 className=\"text-3xl\">\n                                                    {data.healthcare_gdp_pc}\n                                                    <span className=\"inline-block uppercase text-sm tracking-tight\">\n                                                        %\n                                                    </span>\n                                                </h2>\n                                            </div>\n                                        </div>\n                                        <div className=\"w-full px-4 mb-4\">\n                                            <div>\n                                                <p className=\"text-sm font-normal\">\n                                                    {trans('Source')}:\n                                                    <a\n                                                        href={data.source}\n                                                        className=\"ml-1 text-blue-600\"\n                                                        title=\"John Hopkins University\">\n                                                        {trans(\n                                                            'John Hopkins University'\n                                                        )}\n                                                    </a>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"p-8 py-4 border border-t-0 border-gray-800\">\n                                    <div className=\"flex flex-wrap -mx-4 -mb-4\">\n                                        <div className=\"w-full xs:w-1/2 px-4 mb-4\">\n                                            <div>\n                                                <span className=\"text-lg inline-block\">\n                                                    {trans(\n                                                        'Total Covid-19 cases'\n                                                    )}\n                                                </span>\n                                                <h2 className=\"text-3xl\">\n                                                    {data.covid_cases_total &&\n                                                        data.covid_cases_total.toLocaleString(\n                                                            'en'\n                                                        )}\n                                                </h2>\n                                            </div>\n                                        </div>\n                                        <div className=\"w-full xs:w-1/2 px-4 mb-4\">\n                                            <div>\n                                                <span className=\"text-lg inline-block\">\n                                                    {trans(\n                                                        'Total deaths by Covid-19'\n                                                    )}\n                                                </span>\n                                                <h2 className=\"text-3xl\">\n                                                    {data.covid_deaths_total &&\n                                                        data.covid_deaths_total.toLocaleString(\n                                                            'en'\n                                                        )}\n                                                </h2>\n                                            </div>\n                                        </div>\n                                        <div className=\"w-full px-4 mb-4\">\n                                            <div>\n                                                <p className=\"text-sm font-normal\">\n                                                    {trans('Source')}:\n                                                    <a\n                                                        href={data.source}\n                                                        className=\"ml-1 text-blue-600\"\n                                                        title=\"John Hopkins University\">\n                                                        {trans(\n                                                            'John Hopkins University'\n                                                        )}\n                                                    </a>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Tabs>\n                            <TabList>\n                                <Tab>{trans('Tenders')}</Tab>\n                                <Tab>{trans('Profile')}</Tab>\n                            </TabList>\n                            <TabPanel>\n                                <CountryProfileTable />\n                            </TabPanel>\n                            <TabPanel>\n                                <CountryProfile profileData={data} />\n                            </TabPanel>\n                        </Tabs>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n        </section>\n    )\n}\n\nexport default CountryDetail\n","import { createAction } from 'redux-actions'\nimport * as types from './type'\n\nexport const setCurrentCountry = createAction(types.SET_CURRENT_COUNTRY)\n\nexport const setCurrentLocale = (locale) => {\n    window.localStorage.setItem('locale', locale)\n\n    return {\n        type: types.SET_CURRENT_LOCALE,\n        payload: locale\n    }\n}\n\nexport const setTranslations = createAction(types.SET_TRANSLATIONS)\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    setCurrentLocale,\n    setTranslations\n} from '../../store/reducers/general/action'\nimport useTrans from '../../hooks/useTrans'\nimport CountryProfileServices from '../../services/countryProfileServices'\n\nconst languages = [\n    { code: 'en', name: 'English' },\n    { code: 'es', name: 'Spanish' }\n]\n\nconst LanguageSwitcherSelector = () => {\n    const currentLocale = useSelector((state) => state.general.currentLocale)\n\n    const dispatch = useDispatch()\n\n    const onChange = (e) => {\n        dispatch(setCurrentLocale(e.target.value))\n        CountryProfileServices.getTranslations(e.target.value).then(\n            (response) => {\n                dispatch(setTranslations(response))\n            }\n        )\n    }\n\n    const { trans } = useTrans()\n\n    return (\n        <div className=\"lang\">\n            <span className=\"text-sm mr-3\">{trans('Choose Language')}:</span>\n            <select\n                className=\"cursor-pointer outline-none appearance-none bg-transparent border px-2 rounded text-xs\"\n                onChange={onChange}>\n                {languages.map((language, index) => (\n                    <option\n                        key={index}\n                        value={language.code}\n                        selected={currentLocale === language.code}>\n                        {language.name}\n                    </option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nexport default LanguageSwitcherSelector\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport useTrans from '../../hooks/useTrans'\nimport LanguageSwitcherSelector from '../language-switcher/languageSwitcherSelector'\nconst Header = () => {\n    const { trans } = useTrans()\n    return (\n        <div className=\"bg-gray-900 text-white py-4 px-4\">\n            <div className=\"container [ mx-auto ] [ flex justify-between items-center ]\">\n                <div className=\"w-24 leading-none\">\n                    <NavLink to=\"/\" className=\"leading-snug\">\n                        Covid-19 Procurement Explorer\n                    </NavLink>\n                </div>\n                <div className=\"flex items-center\">\n                    <ul className=\"flex\">\n                        <li className=\"mr-8\">\n                            <NavLink exact activeClassName=\"active\" to=\"/\">\n                                {trans('Home')}\n                            </NavLink>\n                        </li>\n                        <li className=\"mr-8\">\n                            <NavLink activeClassName=\"active\" to=\"/about\">\n                                {trans('About')}\n                            </NavLink>\n                        </li>\n                        <li className=\"mr-8\">\n                            <NavLink activeClassName=\"active\" to=\"/country/1\">\n                                {trans('Mexico')}\n                            </NavLink>\n                        </li>\n                        <li className=\"mr-8\">\n                            <NavLink activeClassName=\"active\" to=\"/country/2\">\n                                {trans('Kenya')}\n                            </NavLink>\n                        </li>\n                    </ul>\n                    <LanguageSwitcherSelector />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport useTrans from '../hooks/useTrans'\n\nconst Home = () => {\n    const { trans } = useTrans()\n\n    return (\n        <Fragment>\n            <main\n                className=\"container [ mx-auto mt-12 px-4 ] [ flex flex-col justify-center ]\"\n                style={{ height: '600px' }}>\n                <h1 className=\"[ text-4xl md:text-6xl font-bold uppercase leading-tight ] w-1/2\">\n                    {trans('EMERGENCY PROCUREMENT')}\n                </h1>\n\n                <p className=\"[ text-lg uppercase ] mt-6\">\n                    {trans('DATA, BEST PRACTICES AND RECOMMENDATIONS')}\n                </p>\n\n                <div className=\"mt-16 [ flex flex-wrap md:flex-no-wrap ]\">\n                    <a href=\"\" className=\"flex [ mr-12 mb-10 ]\">\n                        <div className=\"home-circle mr-4 mt-1\">{'>'}</div>\n                        <div>\n                            <p className=\"[ text-2xl font-bold uppercase ]\">\n                                {trans('Explore data')}\n                            </p>\n                            <p className=\"text-gray-600\">\n                                {trans('Stats from countries')}\n                            </p>\n                        </div>\n                    </a>\n                    <a href=\"\" className=\"flex\">\n                        <div className=\"home-circle mr-4 mt-1\">{'>'}</div>\n                        <div>\n                            <p className=\"[ text-2xl font-bold uppercase ]\">\n                                {trans('Explore library')}\n                            </p>\n                            <p className=\"text-gray-600\">\n                                {trans('Best practices and resources')}\n                            </p>\n                        </div>\n                    </a>\n                </div>\n            </main>\n            <section>\n                <div className=\"container [ mx-auto px-4 ] [ flex md:justify-between flex-col md:flex-row ]\">\n                    <div className=\"text-white bg-gray-800 [ flex flex-col justify-between ] [ p-10 ] mb-4 \">\n                        <p>\n                            {trans(\n                                'We have aggregated best practices from all over the world'\n                            )}\n                        </p>\n                        <a\n                            href=\"\"\n                            className=\"uppercase text-white mt-10 inline-block\">\n                            <p>{trans('explore')}</p>\n                            <p className=\"text-2xl\">\n                                {trans('Library')} {'>'}\n                            </p>\n                        </a>\n                    </div>\n                    <div className=\"text-white bg-gray-800 [ flex flex-col justify-between ] [ p-10 md:mx-4 mb-4 ]\">\n                        <p>\n                            {trans(\n                                'Monitor and explore Covid-19 related procurement data'\n                            )}\n                        </p>\n                        <a\n                            href=\"\"\n                            className=\"uppercase text-white mt-10 inline-block\">\n                            <p>{trans('explore')}</p>\n                            <p className=\"text-2xl\">\n                                {trans('Data')} {'>'}\n                            </p>\n                        </a>\n                    </div>\n                    <div className=\"text-white bg-gray-800 [ flex flex-col justify-between ] [ p-10 ] mb-4\">\n                        <p>\n                            {trans(\n                                \"Track your country's Covid-19 procurement status\"\n                            )}\n                        </p>\n                        <a\n                            href=\"\"\n                            className=\"uppercase text-white mt-10 inline-block\">\n                            <p>{trans('explore')}</p>\n                            <p className=\"text-2xl\">\n                                {trans('Countries')} {'>'}\n                            </p>\n                        </a>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default Home\n","import React, { useRef, useEffect } from \"react\";\n\nconst Map = () => {\n    const svgRef = useRef();\n    console.log(svgRef)\n    \n    useEffect(() => {\n        console.log(svgRef);\n    }, [])\n\treturn (\n\t\t<div>\n\t\t\t<svg ref={svgRef}></svg>\n\t\t</div>\n\t);\n};\n\nexport default Map;\n","import React, { useEffect } from 'react'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport Notfound from './components/notfound/notfound'\nimport About from './layouts/About'\nimport Country from './layouts/Country'\nimport Header from './components/header/header'\nimport Home from './layouts/Home'\nimport Map from './components/charts/map'\nimport CountryProfileServices from './services/countryProfileServices'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    setCurrentLocale,\n    setTranslations\n} from './store/reducers/general/action'\n\nfunction App() {\n    const dispatch = useDispatch()\n    const currentLocale = useSelector((state) => state.general.currentLocale)\n\n    useEffect(() => {\n        dispatch(\n            setCurrentLocale(window.localStorage.getItem('locale') || 'es')\n        )\n        CountryProfileServices.getTranslations(currentLocale).then(\n            (response) => {\n                dispatch(setTranslations(response))\n            }\n        )\n    }, [dispatch, currentLocale])\n\n    return (\n        <BrowserRouter>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/map\" component={Map} />\n                <Route path=\"/country/:id\" component={Country} />\n                <Route component={Notfound} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/scss/tailwind.scss\";\nimport \"./assets/scss/main.scss\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}